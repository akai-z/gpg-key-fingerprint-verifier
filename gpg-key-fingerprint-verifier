#!/bin/sh

set -e

readonly GPGKEY_FINGERPRINT_LENGTH=40
readonly GPGKEY_PUB_LABEL="pub:-:"
readonly VERSION_LABEL="gpg"
readonly GPG_DIR="/root/.gnupg"
readonly REQUIRED_DEPS="
gpg
"

GPGKEY_FINGERPRINT=""
GPGKEY_FILE=""

gpg_dir_create() {
  if [ ! -d "$GPG_DIR" ]; then
    mkdir "$GPG_DIR"
    chmod 700 "$GPG_DIR"
  fi
}

gpgkey() {
  echo "$( \
    gpg -q \
      --dry-run \
      --with-colons \
      --with-subkey-fingerprint \
      --import-options import-show \
      --import "$GPGKEY_FILE" \
  )"
}

gpgkeys_count() {
  local gpgkey="$1"

  echo "$gpgkey" | grep -c "^${GPGKEY_PUB_LABEL}"
}

gpgkey_fingerprint_find() {
  local gpgkey="$1"
  local fingerprint="$2"

  echo "$gpgkey" | grep -q "$fingerprint"
}

gpg_version() {
  echo "$( \
    gpg --version \
      | grep -0 "^${VERSION_LABEL}" \
      | cut -d " " -f 3 \
  )"
}

deps_check() {
  local dep

  for dep in $REQUIRED_DEPS
  do
    if [ ! -x "$(command -v "$dep")" ]; then
      error "$(printf "\"%s\" not found." "$dep")"
    fi
  done
}

read_args() {
  local i

  for i in "$@"
  do
    case $i in
      --gpgkey-fingerprint=*)   GPGKEY_FINGERPRINT="${i#*=}";;
      --gpgkey-file=*)          GPGKEY_FILE="${i#*=}";;
    esac
  done
}

error() {
  echo -e >&2 "\n$1\n"
  exit 1
}
